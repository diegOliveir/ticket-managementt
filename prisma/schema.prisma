// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Tickets {
  id       String @id @default(uuid())
  nome     String
  status   String @default("open")
  admin_id String
  user_id  String

  User          User           @relation(fields: [user_id], references: [id])
  administrador Administrador  @relation(fields: [admin_id], references: [id])
  Files         Files[]
  Message       Message[]
  MessageAdmin  MessageAdmin[]
}

model Message {
  id        String   @id @default(uuid())
  content   String // Conteúdo da mensagem
  ticketId  String // Chave estrangeira para Tickets
  ticket    Tickets  @relation(fields: [ticketId], references: [id])
  userId    String // Chave estrangeira para User
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) // Data de criação da mensagem
}

model MessageAdmin {
  id        String        @id @default(uuid())
  content   String // Conteúdo da mensagem
  ticketId  String // Chave estrangeira para Tickets
  ticket    Tickets       @relation(fields: [ticketId], references: [id])
  adminId   String // Chave estrangeira para Administrador
  admin     Administrador @relation(fields: [adminId], references: [id])
  createdAt DateTime      @default(now()) // Data de criação da mensagem
}

model Files {
  id        String   @id @default(uuid())
  nome      String
  url       String
  ticketId  String
  ticket    Tickets  @relation(fields: [ticketId], references: [id])
  createdAt DateTime @default(now())
}

model User {
  id      String    @id @default(uuid())
  nome    String
  email   String    @unique
  senha   String?
  Tickets Tickets[] // Relacionamento de um-para-muitos com Tickets (usuário comum)
  Message Message[]
}

model Administrador {
  id           String         @id @default(uuid())
  nome         String
  email        String         @unique
  senha        String?
  Tickets      Tickets[] // Relacionamento de um-para-muitos com Tickets (administrador)
  MessageAdmin MessageAdmin[]
}
